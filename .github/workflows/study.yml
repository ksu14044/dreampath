name: Github_Actions_Study

on:
  push:
    branches: [ "main" ]

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: âœ… Checkout
        uses: actions/checkout@v4
      
      - name: ðŸ”’ create-vite-env
        run: |
          chmod 777 -R front
          cat <<EOL > front/.env
          VITE_PORTONE_STOREID=${{ secrets.VITE_PORTONE_STOREID }}
          VITE_PORTONE_API_KEY=${{ secrets.VITE_PORTONE_API_KEY }}
          EOL
          cat front/.env

      - name: ðŸ”’ create-applicaition-secret
        run: |
          chmod 777 -R back
          cat <<EOL > back/src/main/resources/application-secret.yml
          spring:
            config:
              activate:
                on-profile: secret
          
            datasource:
              driver-class-name: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://${{ secrets.RDS_NAME }}:3306/${{ secrets.DATABASE_NAME }}
              username: ${{ secrets.DATABASE_USERNAME }}
              password: ${{ secrets.DATABASE_PASSWORD }}
          
            mail:
              host: smtp.gmail.com
              port: 587
              username: ${{ secrets.MAIL_USERNAME }}
              password: ${{ secrets.MAIL_PASSWORD }}
              properties:
                mail:
                  smtp:
                    auth: true
                    timeout: 5000
                    starttls:
                      enable: true
            security:
              oauth2:
                client:
                  registration:
                    google:
                      client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
                      client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
                    naver:
                      client-id: ${{ secrets.NAVER_CLIENT_ID }}
                      client-secret: ${{ secrets.NAVER_CLIENT_SECRET }}
          
          jwt:
            secret: ${{ secrets.JWT_SECRET }}
          
          coolsms:
            api:
              key: ${{ secrets.COOLSMS_API_KEY }}
              secret: ${{ secrets.COOLSMS_API_SECRET }}
              from: ${{ secrets.COOLSMS_API_FROM }}
          EOL
          cat back/src/main/resources/application-secret.yml
          
      - name: print-directory
        run: |
          ls -a front
          ls -a back/src/main/resources
          
      - name: ðŸš¢ DockerHub-LOGIN
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: ðŸ‘· Build-And-Push-React-App
        run: |
          cd front
          docker build -t ${{ secrets.DOCKER_USERNAME }}/board-react-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/board-react-app:latest
          
      - name: ðŸ‘· Build-And-Push-Spring-App
        run: |
          cd back
          docker build -t ${{ secrets.DOCKER_USERNAME }}/board-spring-app .
          docker push ${{ secrets.DOCKER_USERNAME }}/board-spring-app:latest

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: shh
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          usename: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/board-react-app:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/board-spring-app:latest
            cd /home/ubuntu/project
            sudo docker-compose -f project-compose.yml down
            sudo docker-compose -f project-compose.yml up -d


